declare type Anchor=`bottom`|`bottom-left`|`bottom-right`|`center`|`left`|`top`|`top-left`|`top-right`|`right`;declare type Environment=`debug`|`offline`|`production`;declare type Media=HTMLImageElement|HTMLVideoElement;declare type Mode=`contain`|`cover`;declare type Placeholder=`maincolor`|`meancolor`|`none`|`preview`;declare type StateEvent={target:any;state:State;};declare type State=`error`|`done`|`loading`|`new`;interface AnchorObject{x:string|undefined;y:string|undefined;}interface Attributes{alt?:string;anchor?:string;bot?:string;focus?:string;intrinsic?:string;mode?:Mode;eager?:boolean;placeholder?:Placeholder;position?:string;preTransform?:string;ratio?:number|string;step?:number|string;src:string;transition?:boolean|string;transitionDelay?:string;transitionDuration?:string;transitionTimingFunction?:string;}interface Options{anticipation?:number;class?:string;debug?:boolean;domain:string;env?:Environment;handleShadowDom?:boolean;maxDPR?:number;path?:string;step?:number;}interface PlaceholderData{anchor:AnchorObject;focus:string;mode:Mode;placeholder:Placeholder;preTransform:string;ratio:number;src:string;transitions:Record<string,boolean>;}declare const computeAlt:(alt:string,src:string)=>string;declare const computeData:(anchor:AnchorObject,bot:string,eager:boolean,focus:string,intrinsic:string,isVideo:boolean,mode:Mode,preTransform:string,src:string,step:number)=>Record<string,string>;declare const computePlaceholderStyle:(anchor:AnchorObject,focus:string,mode:Mode,placeholder:Placeholder,position:string,preTransform:string,ratio:number,src:string,transitions:Record<string,boolean>,transitionDelay:string,transitionDuration:string,transitionTimingFunction:string,placeholderDataHandler:(data:PlaceholderData)=>void)=>Record<string,string>;declare const computeStyle:(anchor:AnchorObject,mode:Mode,position:string,transitionDelay:string,transitionDuration:string,transitionTimingFunction:string)=>Record<string,string>;declare const computeWrapperClass:(src:string,transitions:Record<string,boolean>)=>string;declare const computeWrapperStyle:(ratio:number)=>Record<string,string>;declare const getDataAttributeName:(baseName:string)=>string;declare const _default:(options:Options)=>void;declare const parseAnchor:(anchor:string)=>AnchorObject;declare const parseAlt:(value:string)=>string;declare const parseBot:(value:string)=>string;declare const parseClassName:(value:string)=>string;declare const parseFocus:(value:string)=>string;declare const parseIntrinsic:(value:string)=>string;declare const parseEager:(value:boolean|string)=>boolean;declare const parseMode:(value:string)=>Mode;declare const parsePlaceholder:(placeholder:Placeholder,src:string)=>Placeholder;declare const parsePosition:(value:string)=>string;declare const parsePreTransform:(value:string)=>string;declare const parseRatio:(value:number|string)=>number;declare const parseStep:(value:number|string)=>number;declare const parseSrc:(value:string)=>string;declare const parseTransition:(value:boolean|string)=>Record<string,boolean>;declare const parseTransitionDelay:(value:string)=>string;declare const parseTransitionDuration:(value:string)=>string;declare const parseTransitionTimingFunction:(value:string)=>string;declare const isWebComponents:boolean;declare const isBrowser:boolean;declare class Observer{private media;private placeholderData;private placeHolderElement;private savedWrapperBackground;private stateHandler;constructor(stateHandler?:(state:State)=>void);handleState:()=>void;refreshBackground:(...args:any[])=>void;setMedia:(media:Media)=>void;setPlaceholderData:(data:PlaceholderData)=>void;destroy:()=>void;}declare const styleToString:(properties:Record<string,string>)=>string;export{Anchor,Attributes as BaseAttributes,Environment,Media,Mode,Observer,Options,Placeholder,State,StateEvent,computeAlt,computeData,computePlaceholderStyle,computeStyle,computeWrapperClass,computeWrapperStyle,getDataAttributeName,_default as installTwicPics,isBrowser,isWebComponents,parseAlt,parseAnchor,parseBot,parseClassName,parseEager,parseFocus,parseIntrinsic,parseMode,parsePlaceholder,parsePosition,parsePreTransform,parseRatio,parseSrc,parseStep,parseTransition,parseTransitionDelay,parseTransitionDuration,parseTransitionTimingFunction,styleToString};